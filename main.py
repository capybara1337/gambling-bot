import telebot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from config import token
import db_manager as db
BANK = 10000
bot = telebot.TeleBot(token)

bar = {'—è–≥–µ—Ä—å–±–æ–º–±–∞' : 300, '–≤–æ–¥–∫–∞' : 100}

def main_menu(message: telebot.types.Message):
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton('–í–∑—è—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –¥–æ–ª–≥üí∏', callback_data='lend_cash'))
    markup.row(InlineKeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞–ø–∏—Ç–æ–∫üç∏', callback_data='bar'))
    markup.add(InlineKeyboardButton('–ü–µ—Ä–µ–≤–æ–¥ –¥–µ–Ω–µ–≥ –∑–∞ –≥—Ä–∞–Ω–∏—Ü—Éüí±', callback_data='transaction'))
    markup.add(InlineKeyboardButton('–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤üèÖ', callback_data='leaderboard'))
    markup.add(InlineKeyboardButton('–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å –í–ª–∞–¥–∞ —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—èüéâ', callback_data='congratulations'))
    markup.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è‚úçÔ∏è', callback_data='change_user'))
    bot.send_message(message.chat.id, f'–í–∞—à–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è: {db.get_info(message)[0]} {db.get_info(message)[1]} \n–í–∞—à –±–∞–ª–∞–Ω—Åüí∞: {db.get_info(message)[3]} \n–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    db.create(message)
    bot.send_message(message.chat.id, '–ø—Ä–∏–≤–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ªü•∫ ')
    bot.register_next_step_handler(message, user_name)
    #main_menu(message)

def user_name(message):
    try:
        name = message.text.split(' ')
        db.addnametodb(message, name)
    except IndexError:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ò–ú–Ø –ø—Ä–æ–±–µ–ª –§–ê–ú–ò–õ–ò–Ø')
        bot.register_next_step_handler(message, user_name)
        return
    bot.send_message(message.chat.id, '–ø–æ–∑–¥—Ä–∞–≤–ª—è—é! —Ç—ã —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –≥–æ—Å—Ç—å –≤–ª–∞–¥–∞ –∫–æ–∑–ª–æ–≤–∞ü§©')
    main_menu(message)

@bot.callback_query_handler(func=lambda callback: True)
def callback_start(callback: telebot.types.CallbackQuery):
    bot.edit_message_reply_markup(chat_id=callback.message.chat.id, message_id=callback.message.id, reply_markup=None)
    # print(callback)
    # bot.edit_message_text(text= ,chat_id=callback.message.chat.id, message_id=callback.message.id, reply_markup=)
    bot.send_message(callback.message.chat.id, '—Ç–µ—Å—Ç')
    if callback.data == 'lend_cash':
        bot.send_message(callback.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –≤ –¥–æ–ª–≥' + '\n' +
                         '–ö–æ–º–∏—Å—Å–∏—è —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 3%, —Ç–æ –µ—Å—Ç—å –≤–∑—è–≤ 100, –ø—Ä–∏–¥–µ—Ç—Å—è –≤–µ—Ä–Ω—É—Ç—å 103')
        bot.send_message(callback.message.chat.id, f'–í–∞—à –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –ª–∏–º–∏—Ç: {1000 - db.get_info(callback.message)[3]} \n–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –≤–∑—è—Ç—å –≤ –¥–æ–ª–≥:')
        bot.register_next_step_handler(callback.message, addlend)
    if callback.data == 'bar':
        count = 0
        s = ''
        for i in bar.items():
            count+=1
            s += str(count) + '. ' + i[0]+ ': ' + str(i[1]) + 'üíµ\n'
        bot.send_message(callback.message.chat.id, s + '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—åüçπ:')
        bot.register_next_step_handler(callback.message, bar_purchase)
    if callback.data == 'canceled':
        bot.send_message(callback.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞')
        main_menu(callback.message)
    if callback.data in bar.keys():
        db.buy_bar(callback.message, callback.data, bar)
        print(callback.data)
        bot.send_message(callback.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–∞—Ä–º–µ–Ω—É ‚úÖ')
        # –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–∫–∞–∑–æ–º –±–∞—Ä–º–µ–Ω—É :3
        # bot.send_message(—Ç—É—Ç id –±–∞—Ä–º–µ–Ω–∞, '–ó–∞–∫–∞–∑: '+ callback.data + ' ' + db.get_info(message)[0] + db.get_info(message)[1])
        main_menu(callback.message)
    if callback.data == 'leaderboard':
        lb = db.getleaderboard()
        bot.send_message(callback.message.chat.id, lb)
        main_menu(callback.message)
    if callback.data == 'congratulations':
        # bot.send_message(—Ç—É—Ç id –≤–ª–∞–¥–∞ –∫–æ–∑–ª–æ–≤–∞, '–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç' + db.get_info(message)[0] + db.get_info(message)[1])
        pass
    if callback.data == 'change_user':
        bot.send_message(callback.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ªü•∫')
        bot.register_next_step_handler(callback.message, change_user_name)

def change_user_name(message):
    try:
        name = message.text.split(' ')
        db.addnametodb(message, name)
    except IndexError:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ò–ú–Ø –ø—Ä–æ–±–µ–ª –§–ê–ú–ò–õ–ò–Ø')
        bot.register_next_step_handler(message, user_name)
        return
    bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ')
    main_menu(message)

def addlend(message: telebot.types.Message):
    try:
        amount = int(message.text.strip())
        if amount < 0: raise ValueError
        db.lend(message, amount)
    except ValueError:
        bot.send_message(message.chat.id, "–í–≤–µ–¥–µ–Ω–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ —á–∏—Å–ª–æ")
        bot.register_next_step_handler(message, addlend)
        return
    main_menu(message)

def bar_purchase(message: telebot.types.Message):
    id = message.chat.id
    name = message.text.strip()
    print(name)
    if name in bar.keys():
        markup = InlineKeyboardMarkup()
        markup.row(InlineKeyboardButton('–ö—É–ø–∏—Ç—åü´∞', callback_data=name))
        markup.row(InlineKeyboardButton('–ë—Ä–æ—Å–∞—é –ø–∏—Ç—å‚ù§Ô∏è‚Äçü©π', callback_data='canceled'))
        bot.send_message(message.chat.id, f'–í–∞—à –Ω–∞–ø–∏—Ç–æ–∫ : {message.text}', reply_markup=markup)  
    else:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞')
        bot.register_next_step_handler(message, bar_purchase)
bot.polling()