import telebot
from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup
from config import token, admins
import db_manager as db
bot = telebot.TeleBot(token)
bar = {'–õ–æ–Ω–≥-–∞–π–ª–µ–Ω–¥' : 500, '–¢–µ–∫–∏–ª–∞ —Å–∞–Ω—Ä–∞–π–∑' : 350, '–ú–∞—Ä—Ç–∏–Ω–∏ —Ñ–∏–µ—Ä–æ' : 250, '–†–æ–º –∫–æ–ª–∞' : 250, 
       '–í–∏—Å–∫–∏ –∫–æ–ª–∞' : 250, '–û—Ç–≤–µ—Ä—Ç–∫–∞' : 200, '–î–∂–∏–Ω —Ç–æ–Ω–∏–∫' : 250, '–î–∞–π–∫–∏—Ä–∏' : 350, '–°–µ–≤–µ—Ä–Ω–æ–µ —Å–∏—è–Ω–∏–µ' : 300}

events = {'–ó–∞–∫–∞–∑–Ω–æ–µ —É–±–∏–π—Å—Ç–≤–æ' : 1500, '–ö–æ–∫–∞–∏–Ω–æ–≤–∞—è —Ñ–æ—Ç–æ—Å–µ—Å—Å–∏—è' : 1000, 
          '–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –°—Ç–∞—Å–∞' : 1000, '–ö–∞—Å—Ç–æ–º–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å' : 1000,
          '–ü–æ–ø—Ä–æ–±—É–π –ø—Ä–æ–≥–ª–æ—Ç–∏' : 1000, '–ö–∞–ª—å—è–Ω' : 500}

def main_menu(message: telebot.types.Message):
    markup = InlineKeyboardMarkup()
    markup.row(InlineKeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å –Ω–∞–ø–∏—Ç–æ–∫üç∏', callback_data='bar'))
    markup.row(InlineKeyboardButton('–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏üì©', callback_data='send_cash'))
    markup.add(InlineKeyboardButton('–¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤üèÖ', callback_data='leaderboard'))
    markup.add(InlineKeyboardButton('–ü–æ–∑–¥—Ä–∞–≤–∏—Ç—å –í–ª–∞–¥–∞ —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—èüéâ', callback_data='congratulations'))
    markup.add(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è‚úçÔ∏è', callback_data='change_user'))
    markup.add(InlineKeyboardButton('–ú–µ–Ω—é –∏–≤–µ–Ω—Ç–æ–≤ü•≥', callback_data='event_menu'))
    if db.get_info(message)[5] == 1:
        markup.add(InlineKeyboardButton('–í—ã–≤–µ—Å—Ç–∏ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüíª', callback_data='admin_butt'))
    bot.send_message(message.chat.id, f'–í–∞—à–∏ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è: {db.get_info(message)[0]} {db.get_info(message)[1]} \n–í–∞—à –±–∞–ª–∞–Ω—Åüí∞: {db.get_info(message)[3]} üíµ—Å—Ç–∞—Å–∏–∫–æ–≤ \n–í—ã–±–µ—Ä–µ—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)

@bot.message_handler(commands=['start'])
def start(message: telebot.types.Message):
    db.create(message)
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ªü•∫ ')
    bot.register_next_step_handler(message, user_name)
    #main_menu(message)

def user_name(message):
    try:
        name = message.text
        if name == None:
            raise IndexError
        name = name.split(' ')
        db.addnametodb(message, name)
    except IndexError:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ò–ú–Ø –ø—Ä–æ–±–µ–ª –§–ê–ú–ò–õ–ò–Ø')
        bot.register_next_step_handler(message, user_name)
        return
    bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é! —Ç—ã —Ç–µ–ø–µ—Ä—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –≥–æ—Å—Ç—å –í–ª–∞–¥–∞ –ö–æ–∑–ª–æ–≤–∞ü§©')
    db.Printalluser()
    main_menu(message)

def check_person(message: telebot.types.Message):
    # print(tuple(message.text.split()[1:2]))
    try:
        names = db.get_names(message)
        ind = int(message.text[1:])
        if ind in range(len(names) + 1):
        # if tuple(message.text.split()) in db.get_names(message):
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞—Å–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å! (–∫–æ–º–º–∏—Å–∏—è 3%)')
            bot.register_next_step_handler(message, send_cash, db.get_chat_id(names[ind-1]))
        else:
            raise ValueError
    except ValueError:
        bot.send_message(message.chat.id, '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö!')
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –≥–æ—Å—Ç—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Å–∏–∫–∏! (–∫–æ–º–º–∏—Å–∏—è 3%)')
        members = db.get_names(message)
        members_out = ''
        count = 1
        for i in members:
            members_out += f'/{count} {i[0]} {i[1]} \n'
            count += 1
        bot.send_message(message.chat.id, members_out)
        bot.register_next_step_handler(message, check_person)

def send_cash(message: telebot.types.Message, id: int):
    try:
        if db.check_wealth(message) == 1:
            db.withdraw_money(message, id)
            bot.send_message(message.chat.id, '–°—Ç–∞—Å–∏–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!')
            main_menu(message)
        elif db.check_wealth(message) == -1:
            bot.send_message(message.chat.id, '–ù–∞ –í–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ç–∞—Å–∏–∫–æ–≤!')
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞—Å–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å! (–∫–æ–º–º–∏—Å–∏—è 3%)')
            bot.register_next_step_handler(message, send_cash, id)
        else: raise Exception
    except:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–µ–Ω–Ω—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ!')
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞—Å–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å! (–∫–æ–º–º–∏—Å–∏—è 3%)')
        bot.register_next_step_handler(message, send_cash, id)

@bot.callback_query_handler(func=lambda callback: True)
def callback_start(callback: telebot.types.CallbackQuery):
    bot.edit_message_reply_markup(chat_id=callback.message.chat.id, message_id=callback.message.id, reply_markup=None)
    # print(callback)
    # bot.edit_message_text(text= ,chat_id=callback.message.chat.id, message_id=callback.message.id, reply_markup=)
    if callback.data == 'bar':
        markup = InlineKeyboardMarkup()
        for i in bar.items():
            markup.add(InlineKeyboardButton(i[0] + ' | ' + str(i[1]), callback_data=i[0]))
        markup.add(InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—éüîô', callback_data='canceled'))
        bot.send_message(callback.message.chat.id,'–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞–ø–∏—Ç–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—åüçπ:', reply_markup=markup)

    if callback.data in bar.keys():
        try:
            db.buy_bar(callback.message, callback.data, bar)
            bot.send_message(callback.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –±–∞—Ä–º–µ–Ω—É ‚úÖ')
        except ValueError:
            bot.send_message(callback.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ç–∞—Å–∏–∫–æ–≤‚ùå')
        # –î–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∑–∞–∫–∞–∑–æ–º –±–∞—Ä–º–µ–Ω—É :3
        bot.send_message('338011074', '–ó–∞–∫–∞–∑: '+ callback.data + ' ' + db.get_info(callback.message)[0] + db.get_info(callback.message)[1])
        bot.send_message('442164116', '–ó–∞–∫–∞–∑: '+ callback.data + ' ' + db.get_info(callback.message)[0] + db.get_info(callback.message)[1])
        bot.send_message('874896474', '–ó–∞–∫–∞–∑: '+ callback.data + ' ' + db.get_info(callback.message)[0] + db.get_info(callback.message)[1])
        main_menu(callback.message)

    if callback.data == 'leaderboard':
        lb = db.getleaderboard()
        if lb == '':
            bot.send_message(callback.message.chat.id, '–ì–æ—Å—Ç–µ–π –µ—â—ë –Ω–µ—Ç')
        else:
            bot.send_message(callback.message.chat.id, lb)
        main_menu(callback.message)

    if callback.data == 'congratulations':
        bot.send_message('1988704372', '–ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—Ç: ' + db.get_info(callback.message)[0] + ' ' + db.get_info(callback.message)[1] + '!!!üéä')
        main_menu(callback.message)

    if callback.data == 'change_user':
        bot.send_message(callback.message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏ —Å–≤–æ—ë –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é, —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ªü•∫')
        bot.register_next_step_handler(callback.message, change_user_name)

    if callback.data == 'event_menu':
        markup = InlineKeyboardMarkup()
        for i in events.items():
            markup.add(InlineKeyboardButton(i[0] + ' | ' + str(i[1]), callback_data=i[0]))
        markup.add(InlineKeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—éüîô', callback_data='canceled'))
        bot.send_message(callback.message.chat.id, '–í—ã–±–µ—Ä–∏ –∏–≤–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã —Ö–æ—á–µ—à—å –∑–∞–∫–∞–∑–∞—Ç—å: ', reply_markup=markup)

    if callback.data in events.keys():
        try:
            db.buy_event(callback.message, callback.data, events)     
            bot.send_message(callback.message.chat.id, '–ò–≤–µ–Ω—Ç ' + callback.data + ' –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω!')
            for i in admins:
                bot.send_message('854453212',  db.get_info(callback.message)[0] + ' ' + db.get_info(callback.message)[1] + ' –∫—É–ø–∏–ª(-–∞) –∏–≤–µ–Ω—Ç ' + callback.data)
        except ValueError:
            bot.send_message(callback.message.chat.id, '–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞, –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ç–∞—Å–∏–∫–æ–≤‚ùå')
        main_menu(callback.message)

    if callback.data == 'send_cash':
        members = db.get_names(callback.message)
        members_out = ''
        count = 1
        for i in members:
            members_out += f'/{count} {i[0]} {i[1]} \n'
            count += 1
        bot.send_message(callback.message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ –≥–æ—Å—Ç—è, –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–µ–Ω—å–≥–∏! (–∫–æ–º–º–∏—Å–∏—è 3%)')
        bot.send_message(callback.message.chat.id, members_out)
        bot.register_next_step_handler(callback.message, check_person)

    if callback.data == 'admin_butt':
        bot.send_message(callback.message.chat.id, db.getallusers())
        main_menu(callback.message)

    if callback.data == 'canceled':
        bot.edit_message_text('–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ!', callback.message.chat.id, callback.message.id)
        main_menu(callback.message)

def change_user_name(message):
    try:
        name = message.text
        if name == None:
            raise IndexError
        name = name.split(' ')
        db.addnametodb(message, name)
    except IndexError:
        bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –ò–ú–Ø –ø—Ä–æ–±–µ–ª –§–ê–ú–ò–õ–ò–Ø')
        bot.register_next_step_handler(message, change_user_name)
        return
    bot.send_message(message.chat.id, '–î–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ')
    main_menu(message)

bot.polling()